public static List<Integer> climbingLeaderboard(List<Integer> ranked, List<Integer> player) {
    List<Integer> playerRanks = new ArrayList<>();
    List<Integer> uniqueRanked = new ArrayList<>();

    // Remove duplicate scores from the ranked leaderboard
    for (int i = 0; i < ranked.size(); i++) {
        if (i == 0 || !ranked.get(i).equals(ranked.get(i - 1))) {
            uniqueRanked.add(ranked.get(i));
        }
    }

    int currentRank = uniqueRanked.size() + 1; // Initialize rank to the lowest possible rank

    int i = uniqueRanked.size() - 1; // Start from the highest ranked player
    for (int playerScore : player) {
        while (i >= 0 && playerScore >= uniqueRanked.get(i)) {
            currentRank--;
            i--;
        }
        playerRanks.add(currentRank);
    }

    return playerRanks;
}
